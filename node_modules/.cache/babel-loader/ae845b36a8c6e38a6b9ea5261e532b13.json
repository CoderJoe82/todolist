{"ast":null,"code":"import todosList from \"./todos.json\";\nimport { ADD_TODO, TOGGLE_TODO, DELETE_TODO, CLEAR_COMPLETED_TODOS } from \"./actions\";\nvar initialState = {\n  todos: todosList\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TODO:\n      {\n        state.todos.push(action.payload);\n        return {\n          todos: newTodoArray\n        };\n      }\n\n    case TOGGLE_TODO:\n      {\n        var newTodos = state.todos.slice();\n        var moreNewTodos = newTodos.map(function (todo) {\n          if (todo.id === action.payload) {\n            todo.completed = !todo.completed;\n          }\n\n          return todo;\n        });\n        return {\n          todos: moreNewTodos\n        };\n      }\n\n    case DELETE_TODO:\n      {\n        var filteredArray = state.todos.filter(function (todo) {\n          if (todo.id === action.payload) {\n            return false;\n          }\n\n          return true;\n        });\n        return {\n          todos: filteredArray\n        };\n      }\n\n    case CLEAR_COMPLETED_TODOS:\n      {\n        var checkedToRemove = state.todos.filter(function (todo) {\n          if (todo.completed === true) {\n            return false;\n          }\n\n          return true;\n        });\n        return {\n          todos: checkedToRemove\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/coderjoe82/Desktop/KenzieQ2/todo-list-part-3/src/reducer.js"],"names":["todosList","ADD_TODO","TOGGLE_TODO","DELETE_TODO","CLEAR_COMPLETED_TODOS","initialState","todos","reducer","state","action","type","push","payload","newTodoArray","newTodos","slice","moreNewTodos","map","todo","id","completed","filteredArray","filter","checkedToRemove"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,cAAtB;AACA,SACEC,QADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,qBAJF,QAKO,WALP;AAOA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAEN;AADY,CAArB;;AAIA,IAAMO,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,QAAL;AAAe;AACbO,QAAAA,KAAK,CAACF,KAAN,CAAYK,IAAZ,CAAiBF,MAAM,CAACG,OAAxB;AACA,eAAO;AAAEN,UAAAA,KAAK,EAAEO;AAAT,SAAP;AACD;;AACD,SAAKX,WAAL;AAAkB;AAChB,YAAMY,QAAQ,GAAGN,KAAK,CAACF,KAAN,CAAYS,KAAZ,EAAjB;AACA,YAAMC,YAAY,GAAGF,QAAQ,CAACG,GAAT,CAAa,UAAAC,IAAI,EAAI;AACxC,cAAIA,IAAI,CAACC,EAAL,KAAYV,MAAM,CAACG,OAAvB,EAAgC;AAC9BM,YAAAA,IAAI,CAACE,SAAL,GAAiB,CAACF,IAAI,CAACE,SAAvB;AACD;;AACD,iBAAOF,IAAP;AACD,SALoB,CAArB;AAMA,eAAO;AAAEZ,UAAAA,KAAK,EAAEU;AAAT,SAAP;AACD;;AACD,SAAKb,WAAL;AAAkB;AAChB,YAAMkB,aAAa,GAAGb,KAAK,CAACF,KAAN,CAAYgB,MAAZ,CAAmB,UAAAJ,IAAI,EAAI;AAC/C,cAAIA,IAAI,CAACC,EAAL,KAAYV,MAAM,CAACG,OAAvB,EAAgC;AAC9B,mBAAO,KAAP;AACD;;AACD,iBAAO,IAAP;AACD,SALqB,CAAtB;AAMA,eAAO;AAAEN,UAAAA,KAAK,EAAEe;AAAT,SAAP;AACD;;AACD,SAAKjB,qBAAL;AAA4B;AAC1B,YAAMmB,eAAe,GAAGf,KAAK,CAACF,KAAN,CAAYgB,MAAZ,CAAmB,UAAAJ,IAAI,EAAI;AACjD,cAAIA,IAAI,CAACE,SAAL,KAAmB,IAAvB,EAA6B;AAC3B,mBAAO,KAAP;AACD;;AACD,iBAAO,IAAP;AACD,SALuB,CAAxB;AAMA,eAAO;AAAEd,UAAAA,KAAK,EAAEiB;AAAT,SAAP;AACD;;AACD;AACE,aAAOf,KAAP;AAlCJ;AAoCD,CArCD;;AAuCA,eAAeD,OAAf","sourcesContent":["import todosList from \"./todos.json\";\nimport {\n  ADD_TODO,\n  TOGGLE_TODO,\n  DELETE_TODO,\n  CLEAR_COMPLETED_TODOS\n} from \"./actions\";\n\nconst initialState = {\n  todos: todosList\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TODO: {\n      state.todos.push(action.payload);\n      return { todos: newTodoArray };\n    }\n    case TOGGLE_TODO: {\n      const newTodos = state.todos.slice();\n      const moreNewTodos = newTodos.map(todo => {\n        if (todo.id === action.payload) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      });\n      return { todos: moreNewTodos }\n    }\n    case DELETE_TODO: {\n      const filteredArray = state.todos.filter(todo => {\n        if (todo.id === action.payload) {\n          return false;\n        }\n        return true;\n      });\n      return { todos: filteredArray };\n    }\n    case CLEAR_COMPLETED_TODOS: {\n      const checkedToRemove = state.todos.filter(todo => {\n        if (todo.completed === true) {\n          return false;\n        }\n        return true;\n      });\n      return { todos: checkedToRemove };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}